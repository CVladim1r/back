import { Markup, Telegraf } from "telegraf";
import dotenv from "dotenv";

dotenv.config();

const bot = new Telegraf(process.env.BOT_TOKEN);

const WEB_APP_URL = "https://669a2ce1de7b10000855a355--durak-teniti.netlify.app/";

bot.start((ctx) => {
    ctx.reply(
        `üëã –ü—Ä–∏–≤–µ—Ç, ${ctx.from.first_name}!\n\n` +
        `–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∏–≥—Ä—É –î—É—Ä–∞–∫ –û–Ω–ª–∞–π–Ω. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å Mini App –∏ –Ω–∞—á–∞—Ç—å –∏–≥—Ä–∞—Ç—å:\n\n` +
        `üåê *Durak Online:* [–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ](${WEB_APP_URL})`,
        Markup.inlineKeyboard([
            Markup.button.webApp("–û—Ç–∫—Ä—ã—Ç—å", WEB_APP_URL)
        ])
        .resize()
    );
});

bot.command("inlinekb", (ctx) => {
    ctx.reply(
        `üëã –ü—Ä–∏–≤–µ—Ç, ${ctx.from.first_name}!\n\n` +
        `–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∏–≥—Ä—É –î—É—Ä–∞–∫ –û–Ω–ª–∞–π–Ω. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å Mini App –∏ –Ω–∞—á–∞—Ç—å –∏–≥—Ä–∞—Ç—å:\n\n` +
        `üåê *Durak Online:* [–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ](${WEB_APP_URL})`,
        Markup.inlineKeyboard([
            Markup.button.webApp("–û—Ç–∫—Ä—ã—Ç—å", WEB_APP_URL)
        ])
        .resize()
    );
});


bot.on("webAppData", async (ctx) => {
    try {
        const data = JSON.parse(ctx.webAppData.data);
        const userId = ctx.from.id;
        const username = ctx.from.username;

        console.log("Received data from Mini App:");
        console.log("User ID:", userId);
        console.log("Username:", username);
        console.log("Data:", data);

        await ctx.reply(
            `üì• –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã –æ—Ç Mini App!\n\n` +
            `*User ID:* ${userId}\n` +
            `*Username:* @${username}\n` +
            `*Data:* ${JSON.stringify(data, null, 2)}`,
            { parse_mode: 'MarkdownV2' }
        );
    } catch (error) {
        console.error("Error processing webAppData:", error);
        await ctx.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ—Ç Mini App.");
    }
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.launch().then(() => {
    console.log("–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω");
}).catch((err) => {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞:", err);
});